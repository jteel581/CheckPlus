/*
Deployment script for CheckPlus

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "CheckPlus"
:setvar DefaultFilePrefix "CheckPlus"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL14.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL14.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF),
                MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT = OFF,
                DELAYED_DURABILITY = DISABLED 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = ALL, DATA_FLUSH_INTERVAL_SECONDS = 900, INTERVAL_LENGTH_MINUTES = 60, MAX_PLANS_PER_QUERY = 200, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE = OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE SCOPED CONFIGURATION SET MAXDOP = 0;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET MAXDOP = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET LEGACY_CARDINALITY_ESTIMATION = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET LEGACY_CARDINALITY_ESTIMATION = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET PARAMETER_SNIFFING = ON;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET PARAMETER_SNIFFING = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET QUERY_OPTIMIZER_HOTFIXES = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET QUERY_OPTIMIZER_HOTFIXES = PRIMARY;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET TEMPORAL_HISTORY_RETENTION ON 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [dbo].[account]...';


GO
CREATE TABLE [dbo].[account] (
    [account_id]     INT           IDENTITY (100000, 1) NOT NULL,
    [first_name]     VARCHAR (50)  NOT NULL,
    [last_name]      VARCHAR (50)  NULL,
    [first_name_2nd] VARCHAR (50)  NULL,
    [last_name_2nd]  VARCHAR (50)  NULL,
    [bank_id]        INT           NOT NULL,
    [address_nm]     VARCHAR (100) NOT NULL,
    [city]           VARCHAR (100) NOT NULL,
    [state]          VARCHAR (50)  NULL,
    [country]        VARCHAR (100) NOT NULL,
    [zip_code]       VARCHAR (25)  NOT NULL,
    [account_number] VARCHAR (20)  NOT NULL,
    [phone_number]   VARCHAR (15)  NULL,
    PRIMARY KEY CLUSTERED ([account_id] ASC)
);


GO
PRINT N'Creating [dbo].[acct_check]...';


GO
CREATE TABLE [dbo].[acct_check] (
    [acct_check_id] INT            IDENTITY (100000, 1) NOT NULL,
    [account_id]    INT            NOT NULL,
    [amount]        DECIMAL (5, 2) NOT NULL,
    [date_written]  DATE           NOT NULL,
    [check_number]  VARCHAR (10)   NOT NULL,
    [date_received] DATE           NOT NULL,
    [amount_paid]   DECIMAL (5, 2) NULL,
    [date_paid]     DATE           NULL,
    [client_id]     INT            NOT NULL,
    PRIMARY KEY CLUSTERED ([acct_check_id] ASC)
);


GO
PRINT N'Creating [dbo].[bank]...';


GO
CREATE TABLE [dbo].[bank] (
    [bank_id]        INT           IDENTITY (100000, 1) NOT NULL,
    [bank_nm]        VARCHAR (100) NOT NULL,
    [routing_number] VARCHAR (20)  NOT NULL,
    [contact_nm]     VARCHAR (35)  NOT NULL,
    [contact_email]  VARCHAR (35)  NOT NULL,
    [contact_phone]  VARCHAR (15)  NOT NULL,
    [bank_address]   VARCHAR (100) NOT NULL,
    [bank_city]      VARCHAR (100) NOT NULL,
    [bank_state]     VARCHAR (50)  NULL,
    [bank_country]   VARCHAR (100) NOT NULL,
    [bank_zip]       VARCHAR (15)  NOT NULL,
    PRIMARY KEY CLUSTERED ([bank_id] ASC)
);


GO
PRINT N'Creating [dbo].[client]...';


GO
CREATE TABLE [dbo].[client] (
    [client_id]       INT            IDENTITY (100000, 1) NOT NULL,
    [client_nm]       VARCHAR (100)  NOT NULL,
    [default_fee]     DECIMAL (5, 2) NOT NULL,
    [days_bw_letters] INT            NOT NULL,
    PRIMARY KEY CLUSTERED ([client_id] ASC)
);


GO
PRINT N'Creating [dbo].[cp_user]...';


GO
CREATE TABLE [dbo].[cp_user] (
    [cp_user_id]   INT          IDENTITY (100000, 1) NOT NULL,
    [client_id]    INT          NULL,
    [first_name]   VARCHAR (30) NOT NULL,
    [last_name]    VARCHAR (30) NOT NULL,
    [username]     VARCHAR (15) NOT NULL,
    [user_role_cd] CHAR (1)     NOT NULL,
    PRIMARY KEY CLUSTERED ([cp_user_id] ASC)
);


GO
PRINT N'Creating [dbo].[letter]...';


GO
CREATE TABLE [dbo].[letter] (
    [letter_id]       INT  IDENTITY (100000, 1) NOT NULL,
    [acct_check_id]   INT  NOT NULL,
    [date_sent_stg_1] DATE NULL,
    [date_sent_stg_2] DATE NULL,
    [date_sent_stg_3] DATE NULL,
    [date_response]   DATE NULL,
    PRIMARY KEY CLUSTERED ([letter_id] ASC)
);


GO
PRINT N'Creating unnamed constraint on [dbo].[acct_check]...';


GO
ALTER TABLE [dbo].[acct_check]
    ADD DEFAULT getdate() FOR [date_received];


GO
PRINT N'Creating unnamed constraint on [dbo].[account]...';


GO
ALTER TABLE [dbo].[account]
    ADD FOREIGN KEY ([bank_id]) REFERENCES [dbo].[bank] ([bank_id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[acct_check]...';


GO
ALTER TABLE [dbo].[acct_check]
    ADD FOREIGN KEY ([account_id]) REFERENCES [dbo].[account] ([account_id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[acct_check]...';


GO
ALTER TABLE [dbo].[acct_check]
    ADD FOREIGN KEY ([client_id]) REFERENCES [dbo].[client] ([client_id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[letter]...';


GO
ALTER TABLE [dbo].[letter]
    ADD FOREIGN KEY ([acct_check_id]) REFERENCES [dbo].[acct_check] ([acct_check_id]);


GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
